export declare class ErrorWithStatusCode extends Error {
    statusCode: number | undefined;
    constructor(message: string, statusCode: number | undefined);
}
export declare enum RequestStatus {
    idle = 0,
    loading = 1,
    loaded = 2,
    error = 3
}
export interface IContext {
    url: string;
    headers?: any;
    schemaVersion?: string;
    requestHandler?: (context: IContext, schemaVersion: string, parameters: any, accept: (value: any) => void, reject: (reason: any) => void) => void;
}
export interface IRequestState<T, P> {
    data: T | null;
    status: RequestStatus;
    err: Error | unknown | null;
    params: P | null;
    callBack: (value: T | null) => void;
    context: IContext | null;
}
export declare const ErrorToString: (err: Error | unknown | null) => string;
