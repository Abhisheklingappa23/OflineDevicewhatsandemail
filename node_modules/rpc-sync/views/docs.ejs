<html>

<head>
    <title>API v<%=locals.versionInfo.schema%> - Documentation</title>
    <style>
        body {
            font-family: Verdana, Geneva, Tahoma, sans-serif;
            font-size: 14px;
        }

        .class {
            margin-left: 50px;
            margin-bottom: 20px;
        }

        .method {
            margin-top: 10px;
            margin-left: 50px;
        }

        .structure {
            margin-left: 50px;
            margin-bottom: 20px;
        }

        .property {
            margin-top: 10px;
            margin-left: 50px;
        }

        .required {
            color: red;
            font-size: 11px;
        }
    </style>
</head>

<body>
    <h1>
        API v<%=locals.versionInfo.schema%>
    </h1>
    <span>
        Modified: <%=new Date(locals.versionInfo.modified).toLocaleDateString()%>
        <%=new Date(locals.versionInfo.modified).toLocaleTimeString()%>
    </span>
    <h2>Methods</h2>
    <%
        const apis = Object.keys(locals.schema);
         for(const api of apis){
            const apiDef = locals.schema[api];
            for(const declaration of apiDef.declarations){
                if(declaration.methods.length>0){
                    %>
    <div class="class">
        <div>
            <b style="color:green"><%=api%></b>
        </div>
        <%
                            for(const method of declaration.methods){
                                var returnType = method.type==null ? "" :  method.type.substring(0,method.type.length-1).replace('Promise<','');
                                %>
        <div class="method">
            <b><%=method.name%></b>(<%
                                                    for(let i=1;i < method.parameters.length;i++){
                                                        const param = method.parameters[i];
                                                        %><span><%=(i==1 ? "" : ", ")%><%=param.name%>: <a
                    href="#<%=param.type%>"><%=param.type%></a></span><%
                                                    }   
                                                    %>) : <a href="#<%=returnType.split('[')[0]%>"><%=returnType%></a>
        </div>
        <%
                            }
                        %>
    </div>
    <%
                }
            }
         }
    %>
    <h2>Enums</h2>

    <%
         for(const api of apis){
             const apiDef = locals.schema[api];
         
            for(const declaration of apiDef.declarations){
                declaration.members = declaration.members || [];
                if(declaration.members.length>0){
                            
                %>
    <div class="structure">
        <a id="<%=declaration.name%>"></a>
        <div>
            <b style="color:purple"><%=declaration.name%></b>
        </div>
        <%
                            for(let i=0;i < declaration.members.length;i++){
                         %>
        <div class="property">
            <b><%=declaration.members[i]%></b><span> = <%=i%></span>
        </div>
        <%
                            }
                        %>
    </div>
    <%
                }
            }
        
         }
        %>
    <h2>Interfaces</h2>

    <%
    
         for(const api of apis){
             const apiDef = locals.schema[api];
             if(apiDef.entity!=true){
                for(const declaration of apiDef.declarations){    
                    declaration.properties = declaration.properties || [];
                    declaration.members = declaration.members || [];
                    declaration.name = declaration.name || "";
                    
                    if(declaration.properties.length>0 || declaration.properties.length==0 && declaration.members.length==0 && declaration.name.startsWith("I")){    
                        %>
    <div class="structure">
        <a id="<%=declaration.name%>"></a>
        <div>
            <b style="color:purple"><%=declaration.name%></b>
        </div>
        <%
                                for(const prop of declaration.properties){
                            %>
        <div class="property">
            <span class="required"><%=prop.isOptional === true ? "" : "*"%></span> <b><%=prop.name%>: <a
                    href="#<%=prop.type%>"><%=prop.type%></a></b>
        </div>
        <%
                                }
                            %>
    </div>
    <%
                    }
                }
            }
         }
    %>

    <h2>Entities</h2>

    <%
             for(const api of apis){
                 const apiDef = locals.schema[api];
                 if(apiDef.entity==true){
                    for(const declaration of apiDef.declarations){
                
                        if(declaration.properties.length>0){      
                        %>
    <div class="structure">
        <a id="<%=declaration.name%>"></a>
        <div>
            <b style="color:purple"><%=declaration.name%></b>
        </div>
        <%
                                for(const prop of declaration.properties){
                            %>
        <div class="property">
            <b><%=prop.name%>: <a href="#<%=prop.type%>"><%=prop.type%></a></b>
        </div>
        <%
                                }
                            %>
    </div>
    <%
                        }
                    }
                }
             }
        %>
</body>

</html>