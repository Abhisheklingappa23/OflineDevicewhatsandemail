import path from "path";
import fs from "fs";

export const isDefinedAndNotNull = (obj: any) => {
  return obj !== null && obj !== undefined;
}

export const isDirectory = (filePath: string) => {
  return new Promise((accept, reject) => {
    fs.lstat(filePath, (err, result) => {
      if (err) {
        reject(err);
        return;
      }
      accept(result.isDirectory());
    });
  });
}

export const getFilesAtPath = (filePath: string): Promise<string[]> => {
  return new Promise((accept, reject) => {
    fs.readdir(filePath, async (err, files) => {
      if (err) {
        reject(err);
        return;
      }
      let results: string[] = [];
      for (const file of files) {
        const fpath = path.join(filePath, file);
        try {
          if (await isDirectory(fpath) === false) {
            results.push(fpath);
          } else {
            results = [...results, ...await getFilesAtPath(fpath)];
          }
        } catch (e) {
          reject(e)
          return;
        }
      }
      accept(results);
    });
  });
}